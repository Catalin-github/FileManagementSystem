{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\ImagePageUpload.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findImages, uploadImages } from '../redux/image/action';\nexport class ImagePageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.client);\n      this.props.findImage(this.props.client.data.email);\n    };\n\n    this.showImage = e => {\n      if (e.target.files.length == 0) {\n        return;\n      }\n\n      var images = new Array();\n      var reader = new Array();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        reader.push(new FileReader());\n        images.push(e.target.files[i]);\n      }\n\n      for (let j = 0; j < e.target.files.length; j++) {\n        reader[j].readAsDataURL(e.target.files[j]);\n      }\n\n      reader.map(item => {\n        item.onload = () => {\n          if (item.readyState == 2) {\n            var date = new Date();\n            var time = date.getTime();\n            this.state.selectedFile.push({\n              id: time.toString(),\n              name: images[0].name,\n              type: images[0].type,\n              data: item.result.split(',')[1]\n            });\n            console.log(images[0].name);\n            console.log(images[0].type);\n            console.log(item);\n            console.log('IMTEM ITEM');\n            var divId = document.createElement('div');\n            divId.id = time.toString();\n            var image = document.createElement('img');\n            image.src = item.result;\n            image.width = 146;\n            image.height = 136;\n            divId.appendChild(image);\n            document.getElementById('image-box').appendChild(divId);\n            console.log(this.state.selectedFile);\n          }\n        };\n      });\n    };\n\n    this.uploadImage = () => {\n      for (let i = 0; i < this.state.selectedFile.length; i++) {\n        document.getElementById(this.state.selectedFile[i].id).remove();\n      }\n\n      this.props.uploadImage(this.state.selectedFile);\n      this.setState({\n        selectedFile: []\n      });\n    };\n\n    this.state = {\n      imageList: [],\n      selectedFile: []\n    };\n  }\n\n  render() {\n    console.log(this.props.image);\n    console.log('imagee');\n\n    if (this.props.loading == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-list\",\n        style: {\n          display: 'flex',\n          flexFlow: 'row wrap',\n          justifyContent: 'space-between',\n          flexDirection: 'column',\n          flexWrap: 'wrap',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.showImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: 'image-box',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.uploadImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, \"Incarca imaginile\")));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    image: state.image.image,\n    loading: state.image.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadImage: data => dispatch(uploadImages(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/ImagePageUpload.js"],"names":["React","Component","connect","findImages","uploadImages","ImagePageUpload","constructor","props","componentDidMount","console","log","client","findImage","data","email","showImage","e","target","files","length","images","Array","reader","i","push","FileReader","j","readAsDataURL","map","item","onload","readyState","date","Date","time","getTime","state","selectedFile","id","toString","name","type","result","split","divId","document","createElement","image","src","width","height","appendChild","getElementById","uploadImage","remove","setState","imageList","render","loading","display","flexFlow","justifyContent","flexDirection","flexWrap","alignContent","alignItems","mapStateToProps","locales","locale","lang","users","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findImages, uploadImages } from '../redux/image/action';\r\n\r\nexport class ImagePageUpload extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timageList: [],\r\n\t\t\tselectedFile: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconsole.log(this.props.client);\r\n\t\tthis.props.findImage(this.props.client.data.email);\r\n\t};\r\n\r\n\tshowImage = (e) => {\r\n\t\tif (e.target.files.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar images = new Array();\r\n\t\tvar reader = new Array();\r\n\t\tfor (let i = 0; i < e.target.files.length; i++) {\r\n\t\t\treader.push(new FileReader());\r\n\t\t\timages.push(e.target.files[i]);\r\n\t\t}\r\n\t\tfor (let j = 0; j < e.target.files.length; j++) {\r\n\t\t\treader[j].readAsDataURL(e.target.files[j]);\r\n\t\t}\r\n\t\treader.map((item) => {\r\n\t\t\titem.onload = () => {\r\n\t\t\t\tif (item.readyState == 2) {\r\n\t\t\t\t\tvar date = new Date();\r\n\t\t\t\t\tvar time = date.getTime();\r\n\t\t\t\t\tthis.state.selectedFile.push({\r\n\t\t\t\t\t\tid: time.toString(),\r\n\t\t\t\t\t\tname: images[0].name,\r\n\t\t\t\t\t\ttype: images[0].type,\r\n\t\t\t\t\t\tdata: item.result.split(',')[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(images[0].name);\r\n\t\t\t\t\tconsole.log(images[0].type);\r\n\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\tconsole.log('IMTEM ITEM');\r\n\t\t\t\t\tvar divId = document.createElement('div');\r\n\t\t\t\t\tdivId.id = time.toString();\r\n\t\t\t\t\tvar image = document.createElement('img');\r\n\t\t\t\t\timage.src = item.result;\r\n\t\t\t\t\timage.width = 146;\r\n\t\t\t\t\timage.height = 136;\r\n\t\t\t\t\tdivId.appendChild(image);\r\n\t\t\t\t\tdocument.getElementById('image-box').appendChild(divId);\r\n\t\t\t\t\tconsole.log(this.state.selectedFile);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tuploadImage = () => {\r\n\t\tfor (let i = 0; i < this.state.selectedFile.length; i++) {\r\n\t\t\tdocument.getElementById(this.state.selectedFile[i].id).remove();\r\n\t\t}\r\n\t\tthis.props.uploadImage(this.state.selectedFile);\r\n\t\tthis.setState({ selectedFile: [] });\r\n\t};\r\n\trender() {\r\n\t\tconsole.log(this.props.image);\r\n\t\tconsole.log('imagee');\r\n\t\tif (this.props.loading == true) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div id='wrapper-image-box'>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid='wrapper-image-list'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tflexFlow: 'row wrap',\r\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\talignContent: 'center',\r\n\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type='file' onChange={this.showImage}></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id={'image-box'}></div>\r\n\t\t\t\t\t\t<button onClick={this.uploadImage}>Incarca imaginile</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\timage: state.image.image,\r\n\t\tloading: state.image.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tuploadImage: (data) => dispatch(uploadImages(data)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);\r\n"]},"metadata":{},"sourceType":"module"}