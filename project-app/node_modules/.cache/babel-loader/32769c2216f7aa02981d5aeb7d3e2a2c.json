{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { FormattedMessage } from \"react-intl\";\nimport Cookies from \"js-cookie\";\nimport Homepage from './Homepage';\nimport Dashboard from './Dashboard';\nimport MyAccount from \"./MyAccount\";\nimport { connect } from \"react-redux\";\nimport { setLocales } from \"../redux/Language/action\";\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\nimport { BrowserRouter, Route, Router, Link, Switch, NavLink } from \"react-router-dom\";\nimport translate from \"../i18nProvider/translate\";\nimport { fetchUsersData, fetchUsersLogin, loginSuccess, logoutUser, verifyAuthentication } from \"../redux/Authentication/action\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleState = () => {\n      this.setState({\n        userss: this.props.client\n      });\n    };\n\n    this.state = {\n      userss: []\n    };\n  } // change = () => {\n  //   this.setState({\n  //     isLoggedIn: false,\n  //   });\n  // };\n  // handleClick = () => {e\n  //   Cookies.remove('jwt')\n  //   this.props.verifyAuthentication()\n  // };\n\n\n  componentDidMount() {// this.setState({ userss: [...this.state.userss, this.props.client] });\n  } //  componentDidUpdate(){\n  //   this.setState({ userss:  [ ...this.state.userss, this.props.client] });\n  // };\n\n\n  render() {\n    //\n    console.log(\"I am in home first\"); //\n\n    if (!this.props.loaded) {\n      //\n      this.props.verifyAuthentication();\n      console.log(\"you make an action => loaded = true \"); //\n    } //\n\n\n    if (this.props.loading) {\n      //\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"Loading... \", console.log(\"You are in loading => loading = true\")); //\n    } else if (!this.props.loading) {\n      //\n      console.log(\"You are in loading => loading = false\"); //\n\n      if (!this.props.isAuth) {\n        return /*#__PURE__*/React.createElement(Homepage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }\n        });\n      } else if (this.props.isAuth) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Dashboard, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 22\n          }\n        }));\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    loaded: state.users.loaded,\n    isAuth: state.users.isAuth,\n    loading: state.users.loading\n  };\n}; // const mapStateToProps = (state) => {\n//   return {\n//     // locale: state.locale,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     //setLocale: (lang) => dispatch(setEnglish(lang)),\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLocale: lang => dispatch(setLocales(lang)),\n    fetchUsersLogin: data => dispatch(fetchUsersLogin(data)),\n    fetchUsersData: () => dispatch(fetchUsersData()),\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/Home.js"],"names":["React","Component","Login","Register","FormattedMessage","Cookies","Homepage","Dashboard","MyAccount","connect","setLocales","I18nProvider","LOCALES","BrowserRouter","Route","Router","Link","Switch","NavLink","translate","fetchUsersData","fetchUsersLogin","loginSuccess","logoutUser","verifyAuthentication","Home","constructor","props","handleState","setState","userss","client","state","componentDidMount","render","console","log","loaded","loading","isAuth","mapStateToProps","locales","locale","lang","users","user","mapDispatchToProps","dispatch","setLocale","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Cookies from \"js-cookie\";\r\nimport Homepage from './Homepage'\r\nimport Dashboard from './Dashboard'\r\nimport MyAccount from \"./MyAccount\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLocales } from \"../redux/Language/action\";\r\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Router,\r\n  Link,\r\n  Switch,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport translate from \"../i18nProvider/translate\";\r\nimport {\r\n  fetchUsersData,\r\n  fetchUsersLogin,\r\n  loginSuccess,\r\n  logoutUser,\r\n  verifyAuthentication,\r\n} from \"../redux/Authentication/action\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userss: [],\r\n    };\r\n  }\r\n  // change = () => {\r\n  //   this.setState({\r\n  //     isLoggedIn: false,\r\n  //   });\r\n  // };\r\n  // handleClick = () => {e\r\n  //   Cookies.remove('jwt')\r\n  //   this.props.verifyAuthentication()\r\n  // };\r\n  componentDidMount() {\r\n    // this.setState({ userss: [...this.state.userss, this.props.client] });\r\n  }\r\n  //  componentDidUpdate(){\r\n  //   this.setState({ userss:  [ ...this.state.userss, this.props.client] });\r\n  // };\r\n\r\n  handleState = () => {\r\n\r\n    this.setState({ userss: this.props.client });\r\n  };\r\n  render() {\r\n    //\r\n\r\n    console.log(\"I am in home first\");\r\n    //\r\n    if (!this.props.loaded) {\r\n      //\r\n      this.props.verifyAuthentication();\r\n      console.log(\"you make an action => loaded = true \");\r\n      //\r\n    }\r\n    //\r\n    if (this.props.loading) {\r\n      //\r\n      return (\r\n        <h1>\r\n          Loading... {console.log(\"You are in loading => loading = true\")}\r\n        </h1>\r\n      );\r\n      //\r\n    } else if (!this.props.loading) {\r\n      //\r\n      console.log(\"You are in loading => loading = false\");\r\n      //\r\n      if (!this.props.isAuth) {\r\n        return  <Homepage />;\r\n      } else if (this.props.isAuth) {\r\n        return  <div><Dashboard /></div>\r\n      }\r\n    }\r\n  } \r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locales: state.locale.lang,\r\n    client: state.users.user,\r\n    loaded: state.users.loaded,\r\n    isAuth: state.users.isAuth,\r\n    loading: state.users.loading,\r\n  };\r\n};\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // locale: state.locale,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     //setLocale: (lang) => dispatch(setEnglish(lang)),\r\n//   };\r\n// };\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLocale: (lang) => dispatch(setLocales(lang)),\r\n    fetchUsersLogin: (data) => dispatch(fetchUsersLogin(data)),\r\n    fetchUsersData: () => dispatch(fetchUsersData()),\r\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\r\n    logoutUser: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}