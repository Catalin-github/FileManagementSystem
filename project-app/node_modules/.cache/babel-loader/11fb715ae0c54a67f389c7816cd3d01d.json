{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\VideoPageUpload.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findVideos, uploadVideosList } from '../redux/video/action';\nexport class VideoPageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {};\n\n    this.showVideo = e => {\n      if (e.target.files.length == 0) {\n        return;\n      }\n\n      var videos = new Array();\n      var reader = new Array();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        reader.push(new FileReader());\n        videos.push(e.target.files[i]);\n      }\n\n      for (let j = 0; j < e.target.files.length; j++) {\n        reader[j].readAsDataURL(e.target.files[j]);\n      }\n\n      reader.map(item => {\n        item.onload = () => {\n          if (item.readyState == 2) {\n            var date = new Date();\n            var time = date.getTime();\n            this.state.selectedFile.push({\n              id: time.toString(),\n              name: videos[0].name,\n              type: videos[0].type,\n              data: item.result.split(',')[1]\n            });\n            console.log(videos[0].name);\n            console.log(videos[0].type);\n            console.log(item);\n            console.log('IMTEM ITEM');\n            var divId = document.createElement('div');\n            divId.id = time.toString();\n            var video = document.createElement('video');\n            video.width = 146;\n            video.height = 136;\n            var source = document.createElement('source');\n            source.src = item.result;\n            video.appendChild(source);\n            divId.appendChild(video);\n            document.getElementById('video-box').appendChild(divId);\n            console.log(this.state.selectedFile);\n          }\n        };\n      });\n    };\n\n    this.uploadVideosList = () => {\n      for (let i = 0; i < this.state.selectedFile.length; i++) {\n        document.getElementById(this.state.selectedFile[i].id).remove();\n      }\n\n      this.props.uploadVideo({\n        data: this.state.selectedFile,\n        email: this.props.client.data.email\n      });\n      this.setState({\n        selectedFile: []\n      });\n    };\n\n    this.state = {\n      videoList: [],\n      selectedFile: []\n    };\n  }\n\n  render() {\n    console.log(this.props.video);\n    console.log('videoe');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper-video-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wrapper-video-list\",\n      style: {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        justifyContent: 'space-between',\n        flexDirection: 'column',\n        flexWrap: 'wrap',\n        alignContent: 'center',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.showvideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: 'video-box',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.uploadvideosList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }\n    }, \"Incarca imaginile\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    video: state.video.video,\n    loading: state.video.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uploadVideosList: data => dispatch(uploadVideosList(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPageUpload);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/VideoPageUpload.js"],"names":["React","Component","connect","findVideos","uploadVideosList","VideoPageUpload","constructor","props","componentDidMount","showVideo","e","target","files","length","videos","Array","reader","i","push","FileReader","j","readAsDataURL","map","item","onload","readyState","date","Date","time","getTime","state","selectedFile","id","toString","name","type","data","result","split","console","log","divId","document","createElement","video","width","height","source","src","appendChild","getElementById","remove","uploadVideo","email","client","setState","videoList","render","display","flexFlow","justifyContent","flexDirection","flexWrap","alignContent","alignItems","showvideo","uploadvideosList","mapStateToProps","locales","locale","lang","users","user","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findVideos, uploadVideosList } from '../redux/video/action';\r\n\r\nexport class VideoPageUpload extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvideoList: [],\r\n\t\t\tselectedFile: [],\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {};\r\n\r\n\tshowVideo = (e) => {\r\n\t\tif (e.target.files.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar videos = new Array();\r\n\t\tvar reader = new Array();\r\n\t\tfor (let i = 0; i < e.target.files.length; i++) {\r\n\t\t\treader.push(new FileReader());\r\n\t\t\tvideos.push(e.target.files[i]);\r\n\t\t}\r\n\t\tfor (let j = 0; j < e.target.files.length; j++) {\r\n\t\t\treader[j].readAsDataURL(e.target.files[j]);\r\n\t\t}\r\n\t\treader.map((item) => {\r\n\t\t\titem.onload = () => {\r\n\t\t\t\tif (item.readyState == 2) {\r\n\t\t\t\t\tvar date = new Date();\r\n\t\t\t\t\tvar time = date.getTime();\r\n\t\t\t\t\tthis.state.selectedFile.push({\r\n\t\t\t\t\t\tid: time.toString(),\r\n\t\t\t\t\t\tname: videos[0].name,\r\n\t\t\t\t\t\ttype: videos[0].type,\r\n\t\t\t\t\t\tdata: item.result.split(',')[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(videos[0].name);\r\n\t\t\t\t\tconsole.log(videos[0].type);\r\n\t\t\t\t\tconsole.log(item);\r\n\t\t\t\t\tconsole.log('IMTEM ITEM');\r\n\t\t\t\t\tvar divId = document.createElement('div');\r\n\t\t\t\t\tdivId.id = time.toString();\r\n\t\t\t\t\tvar video = document.createElement('video');\r\n \t\t\t\t\tvideo.width = 146;\r\n\t\t\t\t\tvideo.height = 136;\r\n                    var source = document.createElement('source')\r\n                    source.src=item.result\r\n                    video.appendChild(source)\r\n\t\t\t\t\tdivId.appendChild(video);\r\n\t\t\t\t\tdocument.getElementById('video-box').appendChild(divId);\r\n\t\t\t\t\tconsole.log(this.state.selectedFile);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t});\r\n\t};\r\n\tuploadVideosList = () => {\r\n\t\tfor (let i = 0; i < this.state.selectedFile.length; i++) {\r\n\t\t\tdocument.getElementById(this.state.selectedFile[i].id).remove();\r\n\t\t}\r\n\t\tthis.props.uploadVideo({\r\n\t\t\tdata: this.state.selectedFile,\r\n\t\t\temail: this.props.client.data.email,\r\n\t\t});\r\n\t\tthis.setState({ selectedFile: [] });\r\n\t};\r\n\trender() {\r\n\t\tconsole.log(this.props.video);\r\n\t\tconsole.log('videoe');\r\n\r\n\t\treturn (\r\n\t\t\t<div id='wrapper-video-box'>\r\n\t\t\t\t<div\r\n\t\t\t\t\tid='wrapper-video-list'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexFlow: 'row wrap',\r\n\t\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\talignContent: 'center',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type='file' onChange={this.showvideo}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id={'video-box'}></div>\r\n\t\t\t\t\t<button onClick={this.uploadvideosList}>Incarca imaginile</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\tvideo: state.video.video,\r\n\t\tloading: state.video.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tuploadVideosList: (data) => dispatch(uploadVideosList(data)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoPageUpload);\r\n"]},"metadata":{},"sourceType":"module"}