{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\ImagePageUpload.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findImages } from '../redux/image/action';\nexport class ImagePageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.client);\n      this.props.findImage(this.props.client.data.email);\n    };\n\n    this.showImage = e => {\n      if (e.target.files.length == 0) {\n        return;\n      }\n\n      var images = new Array();\n      var reader = new Array();\n    };\n\n    this.state = {\n      imageList: [],\n      selectedFile: []\n    };\n  }\n\n  render() {\n    console.log(this.props.image);\n    console.log('imagee');\n\n    if (this.props.loading == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-box\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-list\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.showImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: 'image-box',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    image: state.image.image,\n    loading: state.image.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findImage: id => dispatch(findImages(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/ImagePageUpload.js"],"names":["React","Component","connect","findImages","ImagePageUpload","constructor","props","componentDidMount","console","log","client","findImage","data","email","showImage","e","target","files","length","images","Array","reader","state","imageList","selectedFile","render","image","loading","width","height","display","flexDirection","flexWrap","justifyContent","mapStateToProps","locales","locale","lang","users","user","mapDispatchToProps","dispatch","id"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAC9CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAQnBC,iBARmB,GAQC,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACA,WAAKJ,KAAL,CAAWK,SAAX,CAAqB,KAAKL,KAAL,CAAWI,MAAX,CAAkBE,IAAlB,CAAuBC,KAA5C;AACA,KAXkB;;AAAA,SAahBC,SAbgB,GAaLC,CAAD,IAAK;AACnB,UAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyB,CAA7B,EAAgC;AAC/B;AACA;;AACA,UAAIC,MAAM,GAAG,IAAIC,KAAJ,EAAb;AACA,UAAIC,MAAM,GAAG,IAAID,KAAJ,EAAb;AAII,KAtBe;;AAElB,SAAKE,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,EADC;AAEHC,MAAAA,YAAY,EAAC;AAFV,KAAb;AAIA;;AAiBDC,EAAAA,MAAM,GAAG;AACRjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWoB,KAAvB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAI,KAAKH,KAAL,CAAWqB,OAAX,IAAsB,IAA1B,EAAgC;AAC/B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA,KAFD,MAEO;AACN,0BACC;AAAK,QAAA,EAAE,EAAC,mBAAR;AAA4B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AACC,QAAA,EAAE,EAAC,oBADJ;AAEC,QAAA,KAAK,EAAE;AACNC,UAAAA,OAAO,EAAE,MADH;AAENC,UAAAA,aAAa,EAAE,KAFT;AAGNC,UAAAA,QAAQ,EAAE,MAHJ;AAINC,UAAAA,cAAc,EAAE;AAJV,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKnB,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARnB,eAWmB;AAAK,QAAA,EAAE,EAAE,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXnB,CADD,CADD;AAmBA;AACD;;AAlD6C;;AAqD/C,MAAMoB,eAAe,GAAIZ,KAAD,IAAW;AAClC,SAAO;AACNa,IAAAA,OAAO,EAAEb,KAAK,CAACc,MAAN,CAAaC,IADhB;AAEN3B,IAAAA,MAAM,EAAEY,KAAK,CAACgB,KAAN,CAAYC,IAFd;AAGNb,IAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYA,KAHb;AAINC,IAAAA,OAAO,EAAEL,KAAK,CAACI,KAAN,CAAYC;AAJf,GAAP;AAMA,CAPD;;AAQA,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACN9B,IAAAA,SAAS,EAAG+B,EAAD,IAAQD,QAAQ,CAACtC,UAAU,CAACuC,EAAD,CAAX;AADrB,GAAP;AAGA,CAJD;;AAKA,eAAexC,OAAO,CAACgC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CpC,eAA7C,CAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findImages } from '../redux/image/action';\r\n\r\nexport class ImagePageUpload extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timageList: [],\r\n            selectedFile:[]\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconsole.log(this.props.client);\r\n\t\tthis.props.findImage(this.props.client.data.email);\r\n\t};\r\n\r\n    showImage=(e)=>{\r\nif (e.target.files.length == 0) {\r\n\treturn;\r\n}\r\n var images = new Array();\r\n var reader = new Array();\r\n\r\n\r\n \r\n    }\r\n\trender() {\r\n\t\tconsole.log(this.props.image);\r\n\t\tconsole.log('imagee');\r\n\t\tif (this.props.loading == true) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div id='wrapper-image-box' style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid='wrapper-image-list'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t}}>\r\n                        <div>\r\n                            <input type=\"file\" onChange={this.showImage}></input>\r\n                        </div>\r\n                        <div id={'image-box'}>\r\n\r\n                        </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\timage: state.image.image,\r\n\t\tloading: state.image.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfindImage: (id) => dispatch(findImages(id)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);\r\n"]},"metadata":{},"sourceType":"module"}