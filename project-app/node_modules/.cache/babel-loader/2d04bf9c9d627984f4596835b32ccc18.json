{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCES, LOGIN_ERROR, EDIT_PROFILE } from \"./actionType\";\nexport const fetchUsersLogin = ({\n  email,\n  password\n}) => {\n  const data = {\n    email,\n    password\n  };\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": `application/json`\n      },\n      body: JSON.stringify(data),\n      credentials: \"include\"\n    }).then(res => res.json()).then(res => {\n      const user = {\n        data: res.data,\n        verifyToken: res.verifyToken\n      };\n      dispatch(loginSuccess({\n        user\n      }));\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n};\nexport const fetchUsersRegister = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/register`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => res.json()).then(res => {\n      res.verifyToken = \"\";\n      const user = {\n        data: res.data,\n        verifyToken: res.verifyToken\n      };\n      console.log(`here you have res.data ${user.verifyToken} ttt`);\n\n      if (user.verifyToken) {\n        console.log(\"true\");\n      } else if (!user.verifyToken) {\n        console.log(\"false\");\n      }\n\n      dispatch(loginSuccess(user));\n    }).catch(err => {\n      dispatch(loginError(err));\n      console.error(err.value);\n    });\n  };\n};\nexport const fetchUsersData = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/MyAccount\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      dispatch(loginSuccess(data));\n    }).catch(err => {\n      dispatch(loginError());\n    });\n  };\n};\nexport const verifyAuthentication = () => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/verifyToken`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => res.json()).then(res => {\n      const user = {\n        data: res.data,\n        verifyToken: res.verifyToken\n      };\n      dispatch(loginSuccess(user));\n    }).catch(err => {\n      dispatch(loginError(err));\n      console.error(err.value);\n    });\n  };\n};\nexport const fetchUsersRegister_GET = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/register`, {\n      method: \"GET\",\n      body: JSON.stringify(),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => {\n      if (res.status === 200) {\n        dispatch(loginSuccess(data));\n      } else {\n        console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/logout\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => {\n      if (res.status === 200) {\n        dispatch(loginError());\n      }\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n};\nexport const fetchUsersEditProfile = data => {\n  return dispatch => {\n    fetch(`http://localhost:5000/MyAccount`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => res.json()).then(res => {\n      const user = {\n        data: res.data,\n        verifyToken: res.verifyToken\n      };\n      dispatch(loginSuccess(user));\n      dispatch(editProfile());\n    });\n  };\n};\nexport const fetchUserDeleteAccount = () => {\n  return dispatch => {\n    fetch(`http://localhost:5000/MyAccount`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => {\n      dispatch(editProfile());\n      dispatch(loginError());\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n};\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = res => {\n  return {\n    type: LOGIN_SUCCES,\n    payload: res\n  };\n};\nexport const loginError = err => {\n  return {\n    type: LOGIN_ERROR,\n    payload: err\n  };\n};\nexport const editProfile = () => {\n  return {\n    type: EDIT_PROFILE\n  };\n};","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/redux/Authentication/action.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCES","LOGIN_ERROR","EDIT_PROFILE","fetchUsersLogin","email","password","data","dispatch","loginRequest","fetch","method","headers","body","JSON","stringify","credentials","then","res","json","user","verifyToken","loginSuccess","catch","err","loginError","fetchUsersRegister","console","log","error","value","fetchUsersData","verifyAuthentication","fetchUsersRegister_GET","status","Error","logoutUser","fetchUsersEditProfile","editProfile","fetchUserDeleteAccount","type","payload"],"mappings":"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","sourcesContent":["import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCES,\r\n  LOGIN_ERROR,\r\n  EDIT_PROFILE,\r\n} from \"./actionType\";\r\n\r\nexport const fetchUsersLogin = ({ email, password }) => {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": `application/json` },\r\n      body: JSON.stringify(data),\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const user = { data: res.data, verifyToken: res.verifyToken };\r\n\r\n        dispatch(loginSuccess({ user }));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersRegister = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    fetch(`http://localhost:5000/register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        res.verifyToken = \"\";\r\n        const user = { data: res.data, verifyToken: res.verifyToken };\r\n        console.log(`here you have res.data ${user.verifyToken} ttt`);\r\n        if (user.verifyToken) {\r\n          console.log(\"true\");\r\n        } else if (!user.verifyToken) {\r\n          console.log(\"false\");\r\n        }\r\n        dispatch(loginSuccess(user));\r\n      })\r\n\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/MyAccount\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        dispatch(loginSuccess(data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError());\r\n      });\r\n  };\r\n};\r\nexport const verifyAuthentication = () => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(`http://localhost:5000/verifyToken`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const user = { data: res.data, verifyToken: res.verifyToken };\r\n\r\n        dispatch(loginSuccess(user));\r\n      })\r\n\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersRegister_GET = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    fetch(`http://localhost:5000/register`, {\r\n      method: \"GET\",\r\n      body: JSON.stringify(),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(loginSuccess(data));\r\n        } else {\r\n          console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/logout\", {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(loginError());\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersEditProfile = (data) => {\r\n  return (dispatch) => {\r\n    fetch(`http://localhost:5000/MyAccount`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        const user = { data: res.data, verifyToken: res.verifyToken };\r\n\r\n        dispatch(loginSuccess(user));\r\n        dispatch(editProfile());\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUserDeleteAccount = () => {\r\n  return (dispatch) => {\r\n    fetch(`http://localhost:5000/MyAccount`, {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        dispatch(editProfile());\r\n\r\n        dispatch(loginError());\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (res) => {\r\n  return {\r\n    type: LOGIN_SUCCES,\r\n    payload: res,\r\n  };\r\n};\r\n\r\nexport const loginError = (err) => {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const editProfile = () => {\r\n  return {\r\n    type: EDIT_PROFILE,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}