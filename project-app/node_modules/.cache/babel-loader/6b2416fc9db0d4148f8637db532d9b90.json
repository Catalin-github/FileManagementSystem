{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\ImagePageUpload.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findImages } from '../redux/image/action';\nexport class ImagePageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.client);\n      this.props.findImage(this.props.client.data.email);\n    };\n\n    this.showImage = e => {\n      if (e.target.files.length == 0) {\n        return;\n      }\n\n      var images = new Array();\n      var reader = new Array();\n\n      for (let i = 0; i < e.target.files.length; i++) {\n        reader.push(new FileReader());\n        images.push(e.target.files[i]);\n      }\n\n      for (let j = 0; j < e.target.files.length; j++) {\n        reader[j].readAsDataURL(e.target.files[j]);\n      }\n\n      reader.map(item => {\n        item.onload = () => {\n          if (item.readyState == 2) {\n            console.log(item);\n            console.log(\"IMTEM ITEM\");\n            var divId = document.createElement('div');\n            var image = document.createElement('img');\n            image.src = item.result;\n            image.width = 146;\n            image.height = 136;\n          }\n        };\n      });\n    };\n\n    this.state = {\n      imageList: [],\n      selectedFile: []\n    };\n  }\n\n  render() {\n    console.log(this.props.image);\n    console.log('imagee');\n\n    if (this.props.loading == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-box\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"wrapper-image-list\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.showImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        id: 'image-box',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      })));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    image: state.image.image,\n    loading: state.image.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findImage: id => dispatch(findImages(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/ImagePageUpload.js"],"names":["React","Component","connect","findImages","ImagePageUpload","constructor","props","componentDidMount","console","log","client","findImage","data","email","showImage","e","target","files","length","images","Array","reader","i","push","FileReader","j","readAsDataURL","map","item","onload","readyState","divId","document","createElement","image","src","result","width","height","state","imageList","selectedFile","render","loading","display","flexDirection","flexWrap","justifyContent","mapStateToProps","locales","locale","lang","users","user","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findImages } from '../redux/image/action';\r\n\r\nexport class ImagePageUpload extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timageList: [],\r\n            selectedFile:[]\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconsole.log(this.props.client);\r\n\t\tthis.props.findImage(this.props.client.data.email);\r\n\t};\r\n\r\n    showImage=(e)=>{\r\nif (e.target.files.length == 0) {\r\n\treturn;\r\n}\r\n var images = new Array();\r\n var reader = new Array();\r\n for (let i = 0; i < e.target.files.length; i++) {\r\n\t\treader.push(new FileReader());\r\n\t\timages.push(e.target.files[i]);\r\n }\r\n for (let j = 0; j < e.target.files.length; j++) {\r\n\t\treader[j].readAsDataURL(e.target.files[j]);\r\n }\r\n   reader.map(item => {\r\n      item.onload = () => {\r\n        if (item.readyState == 2) {\r\nconsole.log(item)\r\nconsole.log(\"IMTEM ITEM\")\r\nvar divId = document.createElement('div');\r\n\r\n\r\n var image = document.createElement('img');\r\n image.src = item.result;\r\n image.width = 146;\r\n image.height = 136;\r\n\r\n \r\n     }\r\n      };\r\n    });\r\n  };\r\n\trender() {\r\n\t\tconsole.log(this.props.image);\r\n\t\tconsole.log('imagee');\r\n\t\tif (this.props.loading == true) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div id='wrapper-image-box' style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid='wrapper-image-list'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t}}>\r\n                        <div>\r\n                            <input type=\"file\" onChange={this.showImage}></input>\r\n                        </div>\r\n                        <div id={'image-box'}>\r\n\r\n                        </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\timage: state.image.image,\r\n\t\tloading: state.image.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfindImage: (id) => dispatch(findImages(id)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePageUpload);\r\n"]},"metadata":{},"sourceType":"module"}