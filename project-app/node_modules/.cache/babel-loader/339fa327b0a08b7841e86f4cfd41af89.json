{"ast":null,"code":"import React from \"react\";\nimport MyAccount from \"../components/MyAccount \";\nimport { Redirect } from \"react-router-dom\";\nimport { LOGIN_REQUEST, LOGIN_SUCCES, LOGIN_ERROR } from \"./actionType\"; // import cookie from \"js-cookie\";\n\nexport const fetchUsersLogin = ({\n  email,\n  password\n}) => {\n  const data = {\n    email,\n    password\n  };\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data) //\"password\"),\n\n    }).then(res => {\n      console.log(\"salut\");\n      console.log({\n        email,\n        password\n      }); //const data = body ;\n      // cookie.set(\"token\", res.data.access_token);\n      // cookie.set(\"user\", res.data.user);\n      //this.props.history.push(\"/profile\");\n\n      console.log(res.status);\n      console.log(res);\n      console.log(res.text());\n      console.log(data);\n      console.log(\"salut\");\n\n      if (res.status === 200) {\n        console.log(data);\n        console.log(\"hello\");\n        dispatch(loginSuccess(email, password));\n        console.log(\"Succes\");\n      } else {\n        //   console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n\n      console.log(res.status);\n    }).catch(err => {\n      dispatch(loginError(err)); // console.error(err.value);\n\n      console.log(\"211122\");\n    });\n  };\n};\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = res => {\n  return {\n    type: LOGIN_SUCCES,\n    payload: res.body\n  };\n};\nexport const loginError = err => {\n  return {\n    type: LOGIN_ERROR,\n    payload: err\n  };\n};\nexport const fetchUsersRegister = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/register`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      // cookie.set(\"token\", res.data.access_token);\n      // cookie.set(\"user\", res.data.user);\n      //////// this.props.history.push(\"/profile\");\n      console.log(data);\n\n      if (res.status === 200) {\n        console.log(\"Succes\");\n        dispatch(loginSuccess(data));\n        console.log(\"Succes\");\n        console.log(\"Succes\");\n      } else {\n        console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n    }).catch(err => {\n      dispatch(loginError(err));\n      console.error(err.value);\n    });\n  };\n};\nexport const fetchUsersData = () => {\n  return dispatch => {\n    dispatch(this.loginRequest());\n    fetch(\"http://localhost:5000/MyAccount\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(res => {\n      console.log(res.status);\n      console.log(res.text());\n      console.log(\"Salut\");\n      console.log(res.body);\n\n      if (res.status === 200) {\n        console.log(\"gainnn\");\n        dispatch(this.loginSuccess());\n        this.history.push(\"/MyAccount\");\n        console.log(\"Succes\");\n      } else {\n        console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n    }).catch(err => {\n      dispatch(loginError());\n      console.error(err.value);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/redux/Authentication/action.js"],"names":["React","MyAccount","Redirect","LOGIN_REQUEST","LOGIN_SUCCES","LOGIN_ERROR","fetchUsersLogin","email","password","data","dispatch","loginRequest","fetch","method","headers","body","JSON","stringify","then","res","console","log","status","text","loginSuccess","error","Error","catch","err","loginError","type","payload","fetchUsersRegister","value","fetchUsersData","history","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,WAAtC,QAAyD,cAAzD,C,CACA;;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AACtD,QAAMC,IAAI,GAAG;AACXF,IAAAA,KADW;AAEXC,IAAAA;AAFW,GAAb;AAIA,SAAQE,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,YAAY,EAAb,CAAR;AACAC,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF0B;AAGnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAH6B,CAKnC;;AALmC,KAAhC,CAAL,CAOGS,IAPH,CAOSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEd,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAZ,EAFa,CAGb;AACA;AACA;AACA;;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,IAAJ,EAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,UAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBF,QAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAEAW,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAX,QAAAA,QAAQ,CAACc,YAAY,CAACjB,KAAD,EAAQC,QAAR,CAAb,CAAR;AAEAY,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAPD,MAOO;AACL;AACA,cAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUP,GAAV,CAAd;AACA,cAAMM,KAAN;AACD;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACD,KAhCH,EAiCGK,KAjCH,CAiCUC,GAAD,IAAS;AACdlB,MAAAA,QAAQ,CAACmB,UAAU,CAACD,GAAD,CAAX,CAAR,CADc,CAEd;;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KArCH;AAsCD,GAxCD;AAyCD,CA9CM;AA+CP,OAAO,MAAMV,YAAY,GAAG,MAAM;AAChC,SAAO;AACLmB,IAAAA,IAAI,EAAE3B;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMqB,YAAY,GAAIL,GAAD,IAAS;AACnC,SAAO;AACLW,IAAAA,IAAI,EAAE1B,YADD;AAEL2B,IAAAA,OAAO,EAAEZ,GAAG,CAACJ;AAFR,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,UAAU,GAAID,GAAD,IAAS;AACjC,SAAO;AACLE,IAAAA,IAAI,EAAEzB,WADD;AAEL0B,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMI,kBAAkB,GAAIvB,IAAD,IAAU;AAC1C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,YAAY,EAAb,CAAR;AACAC,IAAAA,KAAK,CAAE,gCAAF,EAAmC;AACtCC,MAAAA,MAAM,EAAE,MAD8B;AAEtCE,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAFgC;AAGtCK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAH6B,KAAnC,CAAL,CAKGI,IALH,CAKSC,GAAD,IAAS;AACb;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;;AACA,UAAIU,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAX,QAAAA,QAAQ,CAACc,YAAY,CAACf,IAAD,CAAb,CAAR;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAPD,MAOO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAUP,GAAV,CAAd;AACA,cAAMM,KAAN;AACD;AACF,KAtBH,EAuBGE,KAvBH,CAuBUC,GAAD,IAAS;AACdlB,MAAAA,QAAQ,CAACmB,UAAU,CAACD,GAAD,CAAX,CAAR;AACAR,MAAAA,OAAO,CAACK,KAAR,CAAcG,GAAG,CAACK,KAAlB;AACD,KA1BH;AA2BD,GA7BD;AA8BD,CA/BM;AAiCP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAQxB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC,KAAKC,YAAL,EAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCC,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAF8B,KAApC,CAAL,CAIGI,IAJH,CAISC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACI,IAAJ,EAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;;AACA,UAAII,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAX,QAAAA,QAAQ,CAAC,KAAKc,YAAL,EAAD,CAAR;AACA,aAAKW,OAAL,CAAaC,IAAb,CAAkB,YAAlB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,OAND,MAMO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,cAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAUP,GAAV,CAAd;AACA,cAAMM,KAAN;AACD;AACF,KApBH,EAqBGE,KArBH,CAqBUC,GAAD,IAAS;AACdlB,MAAAA,QAAQ,CAACmB,UAAU,EAAX,CAAR;AACAT,MAAAA,OAAO,CAACK,KAAR,CAAcG,GAAG,CAACK,KAAlB;AACD,KAxBH;AAyBD,GA3BD;AA4BD,CA7BM","sourcesContent":["import React from \"react\";\r\n\r\nimport MyAccount from \"../components/MyAccount \" ;\r\n\r\nimport  {Redirect}  from \"react-router-dom\";\r\nimport { LOGIN_REQUEST, LOGIN_SUCCES, LOGIN_ERROR } from \"./actionType\";\r\n// import cookie from \"js-cookie\";\r\nexport const fetchUsersLogin = ({ email, password }) => {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n\r\n      //\"password\"),\r\n    })\r\n      .then((res) => {\r\n        console.log(\"salut\");\r\n        console.log({ email, password });\r\n        //const data = body ;\r\n        // cookie.set(\"token\", res.data.access_token);\r\n        // cookie.set(\"user\", res.data.user);\r\n        //this.props.history.push(\"/profile\");\r\n        console.log(res.status);\r\n        console.log(res);\r\n        console.log(res.text());\r\n        console.log(data);\r\n        console.log(\"salut\");\r\n        if (res.status === 200) {\r\n          console.log(data);\r\n\r\n          console.log(\"hello\");\r\n          dispatch(loginSuccess(email, password));\r\n       \r\n          console.log(\"Succes\");\r\n        } else {\r\n          //   console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n        console.log(res.status);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        // console.error(err.value);\r\n        console.log(\"211122\");\r\n      });\r\n  };\r\n};\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (res) => {\r\n  return {\r\n    type: LOGIN_SUCCES,\r\n    payload: res.body,\r\n  };\r\n};\r\n\r\nexport const loginError = (err) => {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\nexport const fetchUsersRegister = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(`http://localhost:5000/register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((res) => {\r\n        // cookie.set(\"token\", res.data.access_token);\r\n        // cookie.set(\"user\", res.data.user);\r\n        //////// this.props.history.push(\"/profile\");\r\n        console.log(data);\r\n        if (res.status === 200) {\r\n          console.log(\"Succes\");\r\n\r\n          dispatch(loginSuccess(data));\r\n          console.log(\"Succes\");\r\n          \r\n          console.log(\"Succes\");\r\n        } else {\r\n          console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchUsersData = () => {\r\n  return (dispatch) => {\r\n    dispatch(this.loginRequest());\r\n    fetch(\"http://localhost:5000/MyAccount\", {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        console.log(res.text());\r\n        console.log(\"Salut\");\r\n        console.log(res.body);\r\n        if (res.status === 200) {\r\n          console.log(\"gainnn\");\r\n\r\n          dispatch(this.loginSuccess());\r\n          this.history.push(\"/MyAccount\");\r\n          console.log(\"Succes\");\r\n        } else {\r\n          console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError());\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}