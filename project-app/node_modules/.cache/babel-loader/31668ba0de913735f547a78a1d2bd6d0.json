{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\PublicRoute.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { verifyAuthentication, verifyRefreshToken, AccountRequest } from \"../redux/Authentication/action\";\n\nconst PublicRoute = ({\n  isAuth,\n  loaded,\n  loading,\n  client,\n  verifyAuthentication,\n  verifyRefreshToken,\n  component: Component,\n  ...rest\n}) => {\n  if (!loaded) {\n    verifyAuthentication(client.verifyToken);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"Loading... \");\n  } else if (!loading) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      component: props => !isAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }));\n  }\n};\n\nconst mapStatetoProps = state => ({\n  isAuth: state.users.isAuth,\n  locales: state.locale.lang,\n  client: state.users.user,\n  loaded: state.users.loaded,\n  loading: state.users.loading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyRefreshToken: () => dispatch(verifyRefreshToken()),\n    verifyAuthentication: verifyToken => dispatch(verifyAuthentication(verifyToken)),\n    AccountRequest: data => dispatch(AccountRequest(data))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(PublicRoute);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/PublicRoute.js"],"names":["React","connect","Route","Redirect","verifyAuthentication","verifyRefreshToken","AccountRequest","PublicRoute","isAuth","loaded","loading","client","component","Component","rest","verifyToken","props","mapStatetoProps","state","users","locales","locale","lang","user","mapDispatchToProps","dispatch","data"],"mappings":";AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAoDC,cAApD,QAA0E,gCAA1E;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,MAJmB;AAKnBP,EAAAA,oBALmB;AAMnBC,EAAAA,kBANmB;AAOnBO,EAAAA,SAAS,EAAEC,SAPQ;AAQnB,KAAGC;AARgB,CAAD,KASd;AACJ,MAAI,CAACL,MAAL,EAAa;AACXL,IAAAA,oBAAoB,CAACO,MAAM,CAACI,WAAR,CAApB;AACD;;AACD,MAAIL,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD,GAFD,MAEO,IAAI,CAACA,OAAL,EAAc;AACnB,wBACE,oBAAC,KAAD,oBACMI,IADN;AAEE,MAAA,SAAS,EAAGE,KAAD,IACT,CAACR,MAAD,gBAAU,oBAAC,SAAD,oBAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV,gBAAqC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;AACF,CAzBD;;AA2BA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,MAAM,EAAEU,KAAK,CAACC,KAAN,CAAYX,MADc;AAElCY,EAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,IAFY;AAGlCX,EAAAA,MAAM,EAAEO,KAAK,CAACC,KAAN,CAAYI,IAHc;AAIlCd,EAAAA,MAAM,EAAES,KAAK,CAACC,KAAN,CAAYV,MAJc;AAKlCC,EAAAA,OAAO,EAAEQ,KAAK,CAACC,KAAN,CAAYT;AALa,CAAZ,CAAxB;;AAQA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,kBAAkB,EAAE,MAAMoB,QAAQ,CAACpB,kBAAkB,EAAnB,CAD7B;AAGLD,IAAAA,oBAAoB,EAAGW,WAAD,IACpBU,QAAQ,CAACrB,oBAAoB,CAACW,WAAD,CAArB,CAJL;AAKHT,IAAAA,cAAc,EAAGoB,IAAD,IAAUD,QAAQ,CAACnB,cAAc,CAACoB,IAAD,CAAf;AAL/B,GAAP;AAQD,CATD;;AAUA,eAAezB,OAAO,CAACgB,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CjB,WAA7C,CAAf","sourcesContent":["\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { verifyAuthentication, verifyRefreshToken , AccountRequest,} from \"../redux/Authentication/action\";\r\n\r\nconst PublicRoute = ({\r\n  isAuth,\r\n  loaded,\r\n  loading,\r\n  client,\r\n  verifyAuthentication,\r\n  verifyRefreshToken,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  if (!loaded) {\r\n    verifyAuthentication(client.verifyToken);\r\n  }\r\n  if (loading) {\r\n    return <h1>Loading... </h1>;\r\n  } else if (!loading) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        component={(props) =>\r\n          !isAuth ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  isAuth: state.users.isAuth,\r\n  locales: state.locale.lang,\r\n  client: state.users.user,\r\n  loaded: state.users.loaded,\r\n  loading: state.users.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    verifyRefreshToken: () => dispatch(verifyRefreshToken()),\r\n\r\n    verifyAuthentication: (verifyToken) =>\r\n      dispatch(verifyAuthentication(verifyToken)),\r\n      AccountRequest: (data) => dispatch(AccountRequest(data)),\r\n\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(PublicRoute);\r\n"]},"metadata":{},"sourceType":"module"}