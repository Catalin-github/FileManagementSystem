{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\ImagePage.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findImages } from '../redux/image/action';\nexport class ImagePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.props.findImage(this.props.client.id);\n    };\n\n    this.state = {\n      imageList\n    };\n  }\n\n  render() {\n    if (this.props.loading == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    image: state.image.image,\n    loading: state.image.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findImage: id => dispatch(findImages(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePage);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/ImagePage.js"],"names":["React","Component","connect","findImages","ImagePage","constructor","props","componentDidMount","findImage","client","id","state","imageList","render","loading","mapStateToProps","locales","locale","lang","users","user","image","mapDispatchToProps","dispatch"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAOnBC,iBAPmB,GAOC,MAAM;AACnB,WAAKD,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,EAAvC;AACH,KATe;;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA;AADY,KAAb;AAGA;;AAMDC,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKP,KAAL,CAAWQ,OAAX,IAAoB,IAAvB,EAA4B;AAC3B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA,KAFD,MAEK;AACL,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAMA;AACA;;AAvBuC;;AA0BzC,MAAMC,eAAe,GAAIJ,KAAD,IAAW;AAClC,SAAO;AACNK,IAAAA,OAAO,EAAEL,KAAK,CAACM,MAAN,CAAaC,IADhB;AAENT,IAAAA,MAAM,EAAEE,KAAK,CAACQ,KAAN,CAAYC,IAFd;AAGNC,IAAAA,KAAK,EAAEV,KAAK,CAACU,KAAN,CAAYA,KAHb;AAINP,IAAAA,OAAO,EAAEH,KAAK,CAACU,KAAN,CAAYP;AAJf,GAAP;AAMA,CAPD;;AAQA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNf,IAAAA,SAAS,EAAGE,EAAD,IAAQa,QAAQ,CAACpB,UAAU,CAACO,EAAD,CAAX;AADrB,GAAP;AAGA,CAJD;;AAKA,eAAeR,OAAO,CAACa,eAAD,EAAkBO,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findImages } from '../redux/image/action';\r\n\r\nexport class ImagePage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timageList\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n        this.props.findImage(this.props.client.id)\r\n    };\r\n\r\n\trender() {\r\n\t\tif(this.props.loading==true){\r\n\t\t\treturn <div>Loading...</div>\r\n\t\t}else{\r\n\t\treturn (<div>\r\n\r\n\r\n\r\n\t\t</div>)\r\n\t\r\n\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\timage: state.image.image,\r\n\t\tloading: state.image.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfindImage: (id) => dispatch(findImages(id)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePage);\r\n"]},"metadata":{},"sourceType":"module"}