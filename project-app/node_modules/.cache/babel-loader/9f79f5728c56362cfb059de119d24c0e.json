{"ast":null,"code":"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { LOGIN_REQUEST, LOGIN_SUCCES, LOGIN_ERROR } from \"./actionType\";\nimport Cookies from 'js-cookie'; // import cookie from \"js-cookie\";\n//  USER POST LOGIN LOGIN LOGIN\n//  USER POST LOGIN LOGIN LOGIN\n//  USER POST LOGIN LOGIN LOGIN\n\nexport const fetchUsersLogin = ({\n  email,\n  password\n}) => {\n  const data = {\n    email,\n    password\n  };\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      if (res.status === 200) {\n        console.log(data);\n        dispatch(loginSuccess({\n          email,\n          password\n        }));\n      } else {\n        const error = new Error(res);\n        throw error;\n      }\n\n      console.log(res.status);\n    }).catch(err => {\n      dispatch(loginError(err));\n    });\n  };\n}; // USER REGISTER REGISTER REGISTER POST\n// USER REGISTER REGISTER REGISTER POST\n// USER REGISTER REGISTER REGISTER POST\n\nexport const fetchUsersRegister = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/register`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => {\n      console.log(\"SALUT SALUT SALUT SALUT SALTU\");\n      console.log(res.headers);\n\n      if (res.status === 200) {\n        Cookies.get('jwt');\n        dispatch(loginSuccess(res.cookie));\n      } else {\n        console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n    }).catch(err => {\n      dispatch(loginError(err));\n      console.error(err.value);\n    });\n  };\n}; // GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\n// GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\n// GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\n\nexport const fetchUsersData = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(\"http://localhost:5000/MyAccount\", {\n      method: \"POST\",\n      headers: {\n        // \"authorization\":,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      dispatch(loginSuccess(data));\n    }).catch(err => {\n      dispatch(loginError());\n      console.error(err.value);\n    });\n  };\n}; // GET GET  REGISTER REGISTER REGISTER\n// GET GET  REGISTER REGISTER REGISTER\n// GET GET  REGISTER REGISTER REGISTER\n// GET GET  REGISTER REGISTER REGISTER\n\nexport const fetchUsersRegister_GET = data => {\n  return dispatch => {\n    dispatch(loginRequest());\n    fetch(`http://localhost:5000/register`, {\n      method: \"GET\",\n      body: JSON.stringify(),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(res => {\n      if (res.status === 200) {\n        dispatch(loginSuccess(data));\n      } else {\n        console.log(res);\n        const error = new Error(res);\n        throw error;\n      }\n    }).catch(err => {\n      dispatch(loginError(err));\n      console.error(err.value);\n    });\n  };\n};\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = res => {\n  return {\n    type: LOGIN_SUCCES,\n    payload: res\n  };\n};\nexport const loginError = err => {\n  return {\n    type: LOGIN_ERROR,\n    payload: err\n  };\n};","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/redux/Authentication/action.js"],"names":["React","Redirect","LOGIN_REQUEST","LOGIN_SUCCES","LOGIN_ERROR","Cookies","fetchUsersLogin","email","password","data","dispatch","loginRequest","fetch","method","headers","body","JSON","stringify","then","res","status","console","log","loginSuccess","error","Error","catch","err","loginError","fetchUsersRegister","credentials","get","cookie","value","fetchUsersData","fetchUsersRegister_GET","type","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { LOGIN_REQUEST, LOGIN_SUCCES, LOGIN_ERROR } from \"./actionType\";\r\nimport Cookies from 'js-cookie'\r\n// import cookie from \"js-cookie\";\r\n\r\n//  USER POST LOGIN LOGIN LOGIN\r\n//  USER POST LOGIN LOGIN LOGIN\r\n//  USER POST LOGIN LOGIN LOGIN\r\nexport const fetchUsersLogin = ({ email, password }) => {\r\n  const data = {\r\n    email,\r\n    password,\r\n  };\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(data);\r\n          dispatch(loginSuccess({ email, password }));\r\n        } else {\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n        console.log(res.status);\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n      });\r\n  };\r\n};\r\n\r\n// USER REGISTER REGISTER REGISTER POST\r\n// USER REGISTER REGISTER REGISTER POST\r\n// USER REGISTER REGISTER REGISTER POST\r\nexport const fetchUsersRegister = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    fetch(`http://localhost:5000/register`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        console.log(\"SALUT SALUT SALUT SALUT SALTU\");\r\n        console.log(res.headers);\r\n        if (res.status === 200) {\r\n          Cookies.get('jwt')\r\n\r\n          dispatch(loginSuccess(res.cookie));\r\n        } else {\r\n          console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\n// GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\r\n// GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\r\n// GET GET  My ACCOUNT My ACCOUNT My ACCOUNT\r\nexport const fetchUsersData = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n    fetch(\"http://localhost:5000/MyAccount\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        // \"authorization\":,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        dispatch(loginSuccess(data));\r\n     \r\n\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError());\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\n// GET GET  REGISTER REGISTER REGISTER\r\n// GET GET  REGISTER REGISTER REGISTER\r\n// GET GET  REGISTER REGISTER REGISTER\r\n// GET GET  REGISTER REGISTER REGISTER\r\nexport const fetchUsersRegister_GET = (data) => {\r\n  return (dispatch) => {\r\n    dispatch(loginRequest());\r\n\r\n    fetch(`http://localhost:5000/register`, {\r\n      method: \"GET\",\r\n      body: JSON.stringify(),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          dispatch(loginSuccess(data));\r\n        } else {\r\n          console.log(res);\r\n          const error = new Error(res);\r\n          throw error;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginError(err));\r\n        console.error(err.value);\r\n      });\r\n  };\r\n};\r\n\r\nexport const loginRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (res) => {\r\n  return {\r\n    type: LOGIN_SUCCES,\r\n    payload: res,\r\n  };\r\n};\r\n\r\nexport const loginError = (err) => {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}