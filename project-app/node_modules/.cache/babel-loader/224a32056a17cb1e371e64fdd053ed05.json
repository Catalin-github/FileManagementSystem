{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { FormattedMessage } from \"react-intl\";\nimport Cookies from \"js-cookie\";\nimport MyAccount from \"./MyAccount\";\nimport { connect } from \"react-redux\";\nimport { setLocales } from \"../redux/Language/action\";\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\nimport { BrowserRouter, Route, Router, Link, Switch, NavLink } from \"react-router-dom\";\nimport translate from \"../i18nProvider/translate\";\nimport { fetchUsersData, fetchUsersLogin, loginSuccess, logoutUser, verifyAuthentication } from \"../redux/Authentication/action\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleState = () => {\n      this.setState({\n        userss: this.props.client\n      });\n\n      if (this.userss.length <= 0 || !this.state.userss) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        }, \"Loading...\");\n      } else {\n        return this.state.userss.map(user => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 50\n            }\n          }, user.email, \" \", user.id);\n        });\n      }\n    };\n\n    this.state = {\n      userss: []\n    };\n  } // change = () => {\n  //   this.setState({\n  //     isLoggedIn: false,\n  //   });\n  // };\n  // handleClick = () => {\n  //   Cookies.remove('jwt')\n  //   this.props.verifyAuthentication()\n  // };\n\n\n  componentDidMount() {\n    this.setState({\n      userss: [...this.state.userss, this.props.client]\n    });\n  }\n\n  render() {\n    //\n    console.log(\"I am in home first\"); //\n\n    if (!this.props.loaded) {\n      //\n      this.props.verifyAuthentication();\n      console.log(\"you make an action => loaded = true \"); //\n    } //\n\n\n    if (this.props.loading) {\n      //\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"Loading... \", console.log(\"You are in loading => loading = true\")); //\n    } else if (!this.props.loading) {\n      //\n      console.log(\"You are in loading => loading = false\"); //\n\n      if (!this.props.isAuth) {\n        return /*#__PURE__*/React.createElement(I18nProvider, {\n          locale: this.props.locales,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.props.setLocale(LOCALES.ENGLISH),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }\n        }, \"English\"), \" \", \"|\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.props.setLocale(LOCALES.GERMAN),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }\n        }, \"German\"), \" \", \"\", \"|\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.props.setLocale(LOCALES.ROMANIAN),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }\n        }, \"Romanian\"), \" \"), /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, \"Welcome to the Homepage and isAuth is:\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/login\",\n          activeStyle: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }\n        }, \"Login\"), \" \", /*#__PURE__*/React.createElement(NavLink, {\n          to: \"/register\",\n          activeStyle: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        }, \"Register\"))));\n      } else if (this.props.isAuth) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        }, (console.log('USERUL DIN state email'), console.log(this.state.userss)), (console.log('USERUL DIN state'), console.log(this.state.userss)), \"Welcome in app \", (console.log('USERUL DIN REDUCTOR'), console.log(this.props.client)), /*#__PURE__*/React.createElement(Link, {\n          to: \"/MyAccount\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }\n        }, \" MyAccount \"), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: this.handleState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        }, \"clickck\")), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          onClick: this.props.logoutUser,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }\n        }, \"Logout\"));\n      }\n    }\n  } ////////////////\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    loaded: state.users.loaded,\n    isAuth: state.users.isAuth,\n    loading: state.users.loading\n  };\n}; // const mapStateToProps = (state) => {\n//   return {\n//     // locale: state.locale,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     //setLocale: (lang) => dispatch(setEnglish(lang)),\n//   };\n// };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLocale: lang => dispatch(setLocales(lang)),\n    fetchUsersLogin: data => dispatch(fetchUsersLogin(data)),\n    fetchUsersData: () => dispatch(fetchUsersData()),\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/Home.js"],"names":["React","Component","Login","Register","FormattedMessage","Cookies","MyAccount","connect","setLocales","I18nProvider","LOCALES","BrowserRouter","Route","Router","Link","Switch","NavLink","translate","fetchUsersData","fetchUsersLogin","loginSuccess","logoutUser","verifyAuthentication","Home","constructor","props","handleState","setState","userss","client","length","state","map","user","email","id","componentDidMount","render","console","log","loaded","loading","isAuth","locales","setLocale","ENGLISH","GERMAN","ROMANIAN","color","mapStateToProps","locale","lang","users","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport MyAccount from \"./MyAccount\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLocales } from \"../redux/Language/action\";\r\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Router,\r\n  Link,\r\n  Switch,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport translate from \"../i18nProvider/translate\";\r\nimport {\r\n  fetchUsersData,\r\n  fetchUsersLogin,\r\n  loginSuccess,\r\n  logoutUser,\r\n  verifyAuthentication,\r\n} from \"../redux/Authentication/action\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n    this.state = {\r\n      userss:[]\r\n    };\r\n  }\r\n  // change = () => {\r\n  //   this.setState({\r\n  //     isLoggedIn: false,\r\n  //   });\r\n  // };\r\n  // handleClick = () => {\r\n  //   Cookies.remove('jwt')\r\n  //   this.props.verifyAuthentication()\r\n  // };\r\n  componentDidMount(){\r\n    this.setState({ userss:  [ ...this.state.userss, this.props.client] });\r\n  };    \r\n  //  componentDidUpdate(){\r\n  //   this.setState({ userss:  [ ...this.state.userss, this.props.client] });\r\n  // };  \r\n\r\n\r\n  handleState=()=>{\r\n    this.setState({ userss:  this.props.client });\r\n    if(this.userss.length<=0 || !this.state.userss){\r\n      return <h1>Loading...</h1>\r\n    }else{\r\n  return this.state.userss.map((user) =>{ return <div>{user.email} {user.id}</div>\r\n})   \r\n    }\r\n  }\r\n  render() {\r\n    //\r\n\r\n    console.log(\"I am in home first\");\r\n    //\r\n    if (!this.props.loaded) {\r\n      //\r\n      this.props.verifyAuthentication();\r\n      console.log(\"you make an action => loaded = true \");\r\n      //\r\n    }\r\n    //\r\n    if (this.props.loading) {\r\n      //\r\n      return (\r\n        <h1>\r\n          Loading... {console.log(\"You are in loading => loading = true\")}\r\n        </h1>\r\n      );\r\n      //\r\n    } else if (!this.props.loading) {\r\n      //\r\n      console.log(\"You are in loading => loading = false\");\r\n      //\r\n      if (!this.props.isAuth) {\r\n        return (\r\n          <I18nProvider locale={this.props.locales}>\r\n            <div>\r\n              <div>\r\n                <button onClick={() => this.props.setLocale(LOCALES.ENGLISH)}>\r\n                  English\r\n                </button>{\" \"}\r\n                |{\" \"}\r\n                <button onClick={() => this.props.setLocale(LOCALES.GERMAN)}>\r\n                  German\r\n                </button>{\" \"}\r\n                {\"\"}|{\" \"}\r\n                <button onClick={() => this.props.setLocale(LOCALES.ROMANIAN)}>\r\n                  Romanian\r\n                </button>{\" \"}\r\n              </div>\r\n              <h1>\r\n                Welcome to the Homepage and isAuth is:\r\n                {/* {console.log(this.props.users)}{\" \"}\r\n                {console.log(this.props.users)}\r\n                {console.log(this.props.users.email)} */}\r\n              </h1>\r\n              {/* {    <button onClick=\"\">GETGETGET</button> */}\r\n              {/*  <Login goes={this.change} gone={this.state.isLoggedIn} />\r\n                     <Register goes={this.change} gone={this.state.isLoggedIn} />*/}\r\n              <div>\r\n                <NavLink to=\"/login\" activeStyle={{ color: \"red\" }}>\r\n                  Login\r\n                </NavLink>{\" \"}\r\n                <NavLink to=\"/register\" activeStyle={{ color: \"red\" }}>\r\n                  Register\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </I18nProvider>\r\n        );\r\n      } else if (this.props.isAuth) {\r\n        return (\r\n          <div>\r\n            {/* {console.log(this.props.client)} */}\r\n            <h1>\r\n            {console.log('USERUL DIN state email'),console.log(this.state.userss)}\r\n            {console.log('USERUL DIN state'),console.log(this.state.userss)}\r\n\r\n    Welcome in app {console.log('USERUL DIN REDUCTOR'),console.log(this.props.client)}\r\n              <Link to=\"/MyAccount\"> MyAccount </Link>\r\n              <button  onClick={this.handleState}>\r\n              clickck\r\n            </button>\r\n            </h1>\r\n            <button type=\"submit\" onClick={this.props.logoutUser}>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  } ////////////////\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locales: state.locale.lang,\r\n    client: state.users.user,\r\n    loaded: state.users.loaded,\r\n    isAuth: state.users.isAuth,\r\n    loading: state.users.loading,\r\n  };\r\n};\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     // locale: state.locale,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     //setLocale: (lang) => dispatch(setEnglish(lang)),\r\n//   };\r\n// };\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLocale: (lang) => dispatch(setLocales(lang)),\r\n    fetchUsersLogin: (data) => dispatch(fetchUsersLogin(data)),\r\n    fetchUsersData: () => dispatch(fetchUsersData()),\r\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\r\n    logoutUser: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}