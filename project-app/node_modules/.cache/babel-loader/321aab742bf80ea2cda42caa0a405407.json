{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\Homepage.js\";\nimport React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { FormattedMessage } from \"react-intl\";\nimport Cookies from \"js-cookie\";\nimport MyAccount from \"./MyAccount\";\nimport { connect } from \"react-redux\";\nimport { setLocales } from \"../redux/Language/action\";\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\nimport { BrowserRouter, Route, Router, Link, Switch, NavLink } from \"react-router-dom\";\nimport translate from \"../i18nProvider/translate\";\nimport { fetchUsersData, fetchUsersLogin, loginSuccess, logoutUser, verifyAuthentication } from \"../redux/Authentication/action\";\n\nclass Home extends Component {\n  render() {\n    if (!this.props.loaded) {\n      //\n      this.props.verifyAuthentication();\n      console.log(\"you make an action => loaded = true \");\n    }\n\n    if (this.props.loading) {\n      //\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, \"Loading...\");\n    } else if (!this.props.loading) {\n      return /*#__PURE__*/React.createElement(I18nProvider, {\n        locale: this.props.locales,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.setLocale(LOCALES.ENGLISH),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, \"English\"), \" \", \"|\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.setLocale(LOCALES.GERMAN),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, \"German\"), \" \", \"\", \"|\", \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.props.setLocale(LOCALES.ROMANIAN),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      }, \"Romanian\"), \" \"), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Welcome to the Homepage\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/login\",\n        activeStyle: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"Login\"), \" \", /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/register\",\n        activeStyle: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, \"Register\"))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    loaded: state.users.loaded,\n    isAuth: state.users.isAuth,\n    loading: state.users.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLocale: lang => dispatch(setLocales(lang)),\n    fetchUsersLogin: data => dispatch(fetchUsersLogin(data)),\n    fetchUsersData: () => dispatch(fetchUsersData()),\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\n    logoutUser: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/Homepage.js"],"names":["React","Component","Login","Register","FormattedMessage","Cookies","MyAccount","connect","setLocales","I18nProvider","LOCALES","BrowserRouter","Route","Router","Link","Switch","NavLink","translate","fetchUsersData","fetchUsersLogin","loginSuccess","logoutUser","verifyAuthentication","Home","render","props","loaded","console","log","loading","locales","setLocale","ENGLISH","GERMAN","ROMANIAN","color","mapStateToProps","state","locale","lang","client","users","user","isAuth","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport MyAccount from \"./MyAccount\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLocales } from \"../redux/Language/action\";\r\nimport { I18nProvider, LOCALES } from \"../i18nProvider\";\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Router,\r\n  Link,\r\n  Switch,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport translate from \"../i18nProvider/translate\";\r\nimport {\r\n  fetchUsersData,\r\n  fetchUsersLogin,\r\n  loginSuccess,\r\n  logoutUser,\r\n  verifyAuthentication,\r\n} from \"../redux/Authentication/action\";\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n\r\n    if (!this.props.loaded) {\r\n      //\r\n      this.props.verifyAuthentication();\r\n      console.log(\"you make an action => loaded = true \");\r\n    }\r\n    if (this.props.loading) {\r\n      //\r\n      return (\r\n        <h1>\r\n          Loading... \r\n        </h1>\r\n      );\r\n    } else if (!this.props.loading) {\r\n      return (\r\n        <I18nProvider locale={this.props.locales}>\r\n          <div>\r\n            <div>\r\n              <button onClick={() => this.props.setLocale(LOCALES.ENGLISH)}>\r\n                English\r\n              </button>{\" \"}\r\n              |{\" \"}\r\n              <button onClick={() => this.props.setLocale(LOCALES.GERMAN)}>\r\n                German\r\n              </button>{\" \"}\r\n              {\"\"}|{\" \"}\r\n              <button onClick={() => this.props.setLocale(LOCALES.ROMANIAN)}>\r\n                Romanian\r\n              </button>{\" \"}\r\n            </div>\r\n            <h1>\r\n              Welcome to the Homepage\r\n            </h1>\r\n  \r\n            <div>\r\n              <NavLink to=\"/login\" activeStyle={{ color: \"red\" }}>\r\n                Login\r\n              </NavLink>{\" \"}\r\n              <NavLink to=\"/register\" activeStyle={{ color: \"red\" }}>\r\n                Register\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </I18nProvider>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    locales: state.locale.lang,\r\n    client: state.users.user,\r\n    loaded: state.users.loaded,\r\n    isAuth: state.users.isAuth,\r\n    loading: state.users.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setLocale: (lang) => dispatch(setLocales(lang)),\r\n    fetchUsersLogin: (data) => dispatch(fetchUsersLogin(data)),\r\n    fetchUsersData: () => dispatch(fetchUsersData()),\r\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\r\n    logoutUser: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n"]},"metadata":{},"sourceType":"module"}