{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\PublicRoute.js\";\n// import React from \"react\";\n// import { Route, Redirect } from \"react-router-dom\";\n// import { connect } from \"react-redux\";\n// import Notification from \"./Notification\";\n// import Home from \"./Home\";\n// import { fetchUsersRegister } from \"../redux/Authentication/action\";\n// import { I18nProvider, LOCALES } from \"../i18nProvider\";\n// import translate from \"../i18nProvider/translate\";\n// export const PublicRoute = ({ isAuth, component: Component, ...rest }) => (\n//   //  <I18nProvider locale={this.props.locales}>\n//   <Route\n//     {...rest}\n//     component={(props) =>\n//       isAuth ? <Redirect to=\"/\" /> : <Component {...props} />\n//     }\n//   />\n//   //  </I18nProvider>\n// );\n// const mapStatetoProps = (state) => ({\n//   isAuth: state.users.isAuth,\n//   locales: state.locale.lang,\n// });\n// export default connect(mapStatetoProps)(PublicRoute);\n// export const PrivateRoute = ({\n//   isAuthenticated,\n//   component: Component,\n//   ...rest\n// }) => (\n//   <Route {...rest} component={(props) => (\n//       isAuthenticated ? (\n//           <div>\n//               <Header />\n//               <Component {...props} />\n//           </div>\n//       ): (\n//           <Redirect to=\"/\" />\n//       )\n//   )} />\n// )\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Cookie from \"js-cookie\";\nimport { verifyAuthentication } from \"../redux/Authentication/action\";\n\nconst PublicRoute = ({\n  isAuth,\n  loaded,\n  loading,\n  client,\n  verifyAuthentication,\n  component: Component,\n  ...rest\n}) => {\n  if (!loaded) {\n    verifyAuthentication(client.verifyToken);\n  }\n\n  console.log(\"I am in public dupa request\");\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }, \"Loading \", console.log(\"sunt in loading\"));\n  } else if (!loading) {\n    console.log(\"you are in public\");\n    console.log(isAuth);\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      component: props => !isAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n  }\n};\n\nconst mapStatetoProps = state => ({\n  isAuth: state.users.isAuth,\n  locales: state.locale.lang,\n  client: state.users.user,\n  loaded: state.users.loaded,\n  loading: state.users.loading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyAuthentication: verifyToken => dispatch(verifyAuthentication(verifyToken))\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(PublicRoute);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/PublicRoute.js"],"names":["React","connect","Route","Redirect","Home","Cookie","verifyAuthentication","PublicRoute","isAuth","loaded","loading","client","component","Component","rest","verifyToken","console","log","props","mapStatetoProps","state","users","locales","locale","lang","user","mapDispatchToProps","dispatch"],"mappings":";AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,oBAAT,QAAqC,gCAArC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,MAFmB;AAGnBC,EAAAA,OAHmB;AAInBC,EAAAA,MAJmB;AAKnBL,EAAAA,oBALmB;AAMnBM,EAAAA,SAAS,EAAEC,SANQ;AAOnB,KAAGC;AAPgB,CAAD,KAQd;AACJ,MAAI,CAACL,MAAL,EAAa;AACXH,IAAAA,oBAAoB,CAACK,MAAM,CAACI,WAAR,CAApB;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;;AACA,MAAIP,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaM,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAb,CAAP;AACD,GAFD,MAEO,IAAI,CAACP,OAAL,EAAc;AACnBM,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACA,wBACE,oBAAC,KAAD,oBACMM,IADN;AAEE,MAAA,SAAS,EAAGI,KAAD,IACT,CAACV,MAAD,gBAAU,oBAAC,SAAD,oBAAeU,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAV,gBAAqC,oBAAC,QAAD;AAAW,QAAA,EAAE,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;AACF,CA3BD;;AA6BA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,MAAM,EAAEY,KAAK,CAACC,KAAN,CAAYb,MADc;AAElCc,EAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,IAFY;AAGlCb,EAAAA,MAAM,EAAES,KAAK,CAACC,KAAN,CAAYI,IAHc;AAIlChB,EAAAA,MAAM,EAAEW,KAAK,CAACC,KAAN,CAAYZ,MAJc;AAKlCC,EAAAA,OAAO,EAAEU,KAAK,CAACC,KAAN,CAAYX;AALa,CAAZ,CAAxB;;AAQA,MAAMgB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLrB,IAAAA,oBAAoB,EAAGS,WAAD,IAAiBY,QAAQ,CAACrB,oBAAoB,CAACS,WAAD,CAArB;AAD1C,GAAP;AAGD,CAJD;;AAKA,eAAed,OAAO,CAACkB,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["// import React from \"react\";\r\n// import { Route, Redirect } from \"react-router-dom\";\r\n// import { connect } from \"react-redux\";\r\n\r\n// import Notification from \"./Notification\";\r\n// import Home from \"./Home\";\r\n// import { fetchUsersRegister } from \"../redux/Authentication/action\";\r\n// import { I18nProvider, LOCALES } from \"../i18nProvider\";\r\n// import translate from \"../i18nProvider/translate\";\r\n\r\n// export const PublicRoute = ({ isAuth, component: Component, ...rest }) => (\r\n//   //  <I18nProvider locale={this.props.locales}>\r\n//   <Route\r\n//     {...rest}\r\n//     component={(props) =>\r\n//       isAuth ? <Redirect to=\"/\" /> : <Component {...props} />\r\n//     }\r\n//   />\r\n//   //  </I18nProvider>\r\n// );\r\n\r\n// const mapStatetoProps = (state) => ({\r\n//   isAuth: state.users.isAuth,\r\n//   locales: state.locale.lang,\r\n// });\r\n\r\n// export default connect(mapStatetoProps)(PublicRoute);\r\n\r\n// export const PrivateRoute = ({\r\n//   isAuthenticated,\r\n//   component: Component,\r\n//   ...rest\r\n// }) => (\r\n//   <Route {...rest} component={(props) => (\r\n//       isAuthenticated ? (\r\n//           <div>\r\n//               <Header />\r\n//               <Component {...props} />\r\n//           </div>\r\n//       ): (\r\n//           <Redirect to=\"/\" />\r\n//       )\r\n//   )} />\r\n// )\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Cookie from \"js-cookie\";\r\nimport { verifyAuthentication } from \"../redux/Authentication/action\";\r\n\r\nconst PublicRoute = ({\r\n  isAuth,\r\n  loaded,\r\n  loading,\r\n  client,\r\n  verifyAuthentication,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  if (!loaded) {\r\n    verifyAuthentication(client.verifyToken);\r\n  }\r\n  console.log(\"I am in public dupa request\");\r\n  if (loading) {\r\n    return <h1>Loading {console.log(\"sunt in loading\")}</h1>;\r\n  } else if (!loading) {\r\n    console.log(\"you are in public\");\r\n    console.log(isAuth);\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        component={(props) =>\r\n          !isAuth ? <Component {...props} /> : <Redirect  to=\"/\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  isAuth: state.users.isAuth,\r\n  locales: state.locale.lang,\r\n  client: state.users.user,\r\n  loaded: state.users.loaded,\r\n  loading: state.users.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    verifyAuthentication: (verifyToken) => dispatch(verifyAuthentication(verifyToken)),\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(PublicRoute);\r\n"]},"metadata":{},"sourceType":"module"}