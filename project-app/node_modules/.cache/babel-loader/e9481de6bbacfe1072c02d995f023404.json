{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport { verifyAuthentication } from \"../redux/Authentication/action\";\nimport Cookie from \"js-cookie\";\n\nconst PrivateRoute = ({\n  verifyAuthentication,\n  isAuth,\n  component: Component,\n  ...rest\n}) => {\n  console.log(\"I am in private\");\n  verifyAuthentication();\n  console.log(\"I am in private\");\n\n  if (isAuth == false) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    component: props => isAuth ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStatetoProps = state => ({\n  isAuth: state.users.isAuth,\n  locales: state.locale.lang\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    verifyAuthentication: () => dispatch(verifyAuthentication())\n  };\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/PrivateRoute.js"],"names":["React","connect","Route","Redirect","Home","verifyAuthentication","Cookie","PrivateRoute","isAuth","component","Component","rest","console","log","props","mapStatetoProps","state","users","locales","locale","lang","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,oBAAT,QAAqC,gCAArC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACF,EAAAA,oBAAD;AAAsBG,EAAAA,MAAtB;AAA6BC,EAAAA,SAAS,EAAEC,SAAxC;AAAkD,KAAGC;AAArD,CAAD,KAAgE;AACnFC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAR,EAAAA,oBAAoB;AACpBO,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,MAAGL,MAAM,IAAE,KAAX,EAAiB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AACD,sBACE,oBAAC,KAAD,oBACMG,IADN;AAEE,IAAA,SAAS,EAAGG,KAAD,IACTN,MAAM,gBAAG,oBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAA8B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CAfD;;AAiBA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,MAAM,EAAEQ,KAAK,CAACC,KAAN,CAAYT,MADc;AAElCU,EAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAFY,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,oBAAoB,EAAE,MAAMiB,QAAQ,CAACjB,oBAAoB,EAArB;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACc,eAAD,EAAkBM,kBAAlB,CAAP,CAA6Cd,YAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport { verifyAuthentication } from \"../redux/Authentication/action\";\r\n\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst PrivateRoute = ({verifyAuthentication,isAuth,component: Component,...rest}) => {\r\n  console.log(\"I am in private\");\r\n  verifyAuthentication()\r\n  console.log(\"I am in private\");\r\n  if(isAuth==false){\r\n    return <h1>Loading</h1>\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  isAuth: state.users.isAuth,\r\n  locales: state.locale.lang,\r\n});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    verifyAuthentication: () => dispatch(verifyAuthentication()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}