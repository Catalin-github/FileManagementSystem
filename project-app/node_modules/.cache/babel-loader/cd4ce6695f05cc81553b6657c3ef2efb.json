{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel M\\\\React\\\\Project\\\\project-app\\\\src\\\\components\\\\ImagePage.js\";\n\n/** @format */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { findImages } from '../redux/image/action';\nexport class ImagePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      console.log(this.props.client);\n      this.props.findImage(this.props.client.data.email);\n    };\n\n    this.state = {\n      imageList: this.props.image\n    };\n  }\n\n  render() {\n    console.log(this.props.image);\n    console.log(\"imagee\");\n\n    if (this.props.loading == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 6\n        }\n      }, this.props.image.map(({\n        name,\n        type,\n        data,\n        id\n      }, index) => /*#__PURE__*/React.createElement(\"ul\", {\n        key: index + \"-\" + id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        width: \"\",\n        src: `data:image/${type};base64,${data}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }\n      }, name))))));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    locales: state.locale.lang,\n    client: state.users.user,\n    image: state.image.image,\n    loading: state.image.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    findImage: id => dispatch(findImages(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePage);","map":{"version":3,"sources":["C:/Users/Samuel M/React/Project/project-app/src/components/ImagePage.js"],"names":["React","Component","connect","findImages","ImagePage","constructor","props","componentDidMount","console","log","client","findImage","data","email","state","imageList","image","render","loading","width","height","map","name","type","id","index","mapStateToProps","locales","locale","lang","users","user","mapDispatchToProps","dispatch"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAOnBC,iBAPmB,GAOC,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,MAAvB;AACA,WAAKJ,KAAL,CAAWK,SAAX,CAAqB,KAAKL,KAAL,CAAWI,MAAX,CAAkBE,IAAlB,CAAuBC,KAA5C;AACA,KAVkB;;AAElB,SAAKC,KAAL,GAAa;AACZC,MAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWU;AADV,KAAb;AAGA;;AAODC,EAAAA,MAAM,GAAG;AACRT,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWU,KAAvB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAI,KAAKH,KAAL,CAAWY,OAAX,IAAsB,IAA1B,EAAgC;AAC/B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACA,KAFD,MAEO;AACN,0BACC;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKd,KAAL,CAAWU,KAAX,CAAiBK,GAAjB,CAAqB,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcX,QAAAA,IAAd;AAAoBY,QAAAA;AAApB,OAAD,EAA0BC,KAA1B,kBACrB;AAAI,QAAA,GAAG,EAAEA,KAAK,GAAC,GAAN,GAAUD,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAK,QAAA,KAAK,EAAC,EAAX;AAAc,QAAA,GAAG,EAAG,cAAaD,IAAK,WAAUX,IAAK,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIU,IAAJ,CADD,CAFD,CADA,CADF,CADD,CADD;AAcA;AACD;;AAlCuC;;AAqCzC,MAAMI,eAAe,GAAIZ,KAAD,IAAW;AAClC,SAAO;AACNa,IAAAA,OAAO,EAAEb,KAAK,CAACc,MAAN,CAAaC,IADhB;AAENnB,IAAAA,MAAM,EAAEI,KAAK,CAACgB,KAAN,CAAYC,IAFd;AAGNf,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYA,KAHb;AAINE,IAAAA,OAAO,EAAEJ,KAAK,CAACE,KAAN,CAAYE;AAJf,GAAP;AAMA,CAPD;;AAQA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNtB,IAAAA,SAAS,EAAGa,EAAD,IAAQS,QAAQ,CAAC9B,UAAU,CAACqB,EAAD,CAAX;AADrB,GAAP;AAGA,CAJD;;AAKA,eAAetB,OAAO,CAACwB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C5B,SAA7C,CAAf","sourcesContent":["/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { findImages } from '../redux/image/action';\r\n\r\nexport class ImagePage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\timageList: this.props.image,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tconsole.log(this.props.client)\r\n\t\tthis.props.findImage(this.props.client.data.email);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log(this.props.image);\r\n\t\tconsole.log(\"imagee\")\r\n\t\tif (this.props.loading == true) {\r\n\t\t\treturn <div>Loading...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ width: '100%', height: '100%' }}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{this.props.image.map(({ name, type, data, id}, index) => (\r\n\t\t\t\t\t\t\t<ul key={index+\"-\"+id}>\r\n\t\t\t\t\t\t\t\t<img width=\"\" src={`data:image/${type};base64,${data}`} />\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<p>{name}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tlocales: state.locale.lang,\r\n\t\tclient: state.users.user,\r\n\t\timage: state.image.image,\r\n\t\tloading: state.image.loading,\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tfindImage: (id) => dispatch(findImages(id)),\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagePage);\r\n"]},"metadata":{},"sourceType":"module"}